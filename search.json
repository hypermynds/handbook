[{"path":"index.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"","code":""},{"path":"setting-up-your-computer.html","id":"setting-up-your-computer","chapter":"2 Setting up your computer","heading":"2 Setting up your computer","text":"","code":""},{"path":"setting-up-your-computer.html","id":"security-and-privacy-configuration","chapter":"2 Setting up your computer","heading":"2.1 Security and privacy configuration","text":"mantain high standard security personal laptop employees\nmust follow guidelines:Computers must use hard drive encryption:\nchoose Apple menu () System Preferences click Security & Privacy;\nclick FileVault tab;\nclick Turn FileVault;\nchoose create local recovery key communicate recovery key\nmanager (use instant messaging mail message).\nComputers must use hard drive encryption:choose Apple menu () System Preferences click Security & Privacy;click FileVault tab;click Turn FileVault;choose create local recovery key communicate recovery key\nmanager (use instant messaging mail message).Firewall must enabled:\nchoose Apple menu () System Preferences click Security & Privacy;\nclick Firewall tab;\nclick Turn Firewall button.\nFirewall must enabled:choose Apple menu () System Preferences click Security & Privacy;click Firewall tab;click Turn Firewall button.Disable automatic login require password waking sleep (\nFileVault activated automatic login already disabled):\nchoose Apple menu () System Preferences click Security & Privacy;\nclick General tab;\nselect option require password immediately sleep \nscreen saver begin.\nDisable automatic login require password waking sleep (\nFileVault activated automatic login already disabled):choose Apple menu () System Preferences click Security & Privacy;click General tab;select option require password immediately sleep \nscreen saver begin.","code":""},{"path":"setting-up-your-computer.html","id":"how-to-install-the-software-using-homebrew","chapter":"2 Setting up your computer","heading":"2.2 How to install the software using Homebrew","text":"Homebrew easiest way install software \nkeep updated. install Homebrew execute following command \nTerminal follow instructions:Homebrew installed close Terminal open , \ncan check everything ok executing command brew --version, \nsee something like :complete Homebrew setup install also\nbrew-cask-update executing\ncommand:","code":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"> brew --version\nHomebrew 3.3.9\nHomebrew/homebrew-core (git revision 8600fa3966f; last commit 2021-12-21)\nHomebrew/homebrew-cask (git revision 17172f9d63; last commit 2021-12-21)brew tap buo/cask-upgrade"},{"path":"setting-up-your-computer.html","id":"keep-everything-updated","chapter":"2 Setting up your computer","heading":"2.2.1 Keep everything updated","text":"Homebrew handles updates installed softwares , don’t need\ndownload reinstall software checking new version package\nreleased. keep everything updated follow steps:command brew update download updated list packages provided \nHomebrew;command brew outdated gives list outdated packages, can\ncheck something break work;command brew upgrade updates outdated packages installing new\navailable versions;command brew cu updates cask packages (usually ignored \nupgrade command).","code":""},{"path":"setting-up-your-computer.html","id":"essential-commands","chapter":"2 Setting up your computer","heading":"2.2.2 Essential commands","text":"brew doctorCheck system potential problems.\nCheck system potential problems.brew info <package>Show summary information package.\nShow summary information package.brew install [--cask] <package>Install package cask.\nInstall package cask.brew listList installed packages casks.\nList installed packages casks.brew outdatedList installed casks packages updated version available.\nList installed casks packages updated version available.brew reinstall [--cask] <package>Uninstall reinstall package cask.\nUninstall reinstall package cask.brew search <text>Perform substring search cask package names.\nPerform substring search cask package names.brew uninstall <package>Uninstall package cask.\nUninstall package cask.brew updateFetch newest version Homebrew packages.\nFetch newest version Homebrew packages.brew upgrade [<package>]Upgrade outdated casks outdated packages. cask package \nspecified, upgrade given cask package.\nUpgrade outdated casks outdated packages. cask package \nspecified, upgrade given cask package.","code":""},{"path":"setting-up-your-computer.html","id":"setting-up-the-r-development-environment","chapter":"2 Setting up your computer","heading":"2.3 Setting up the R development environment","text":"R \nRStudio can installed using\nHomebrew:RStudio installed /Applications directory, check everything\nsetup correctly enough open .","code":"> brew install --cask r\n...\n> brew install --cask rstudio\n..."},{"path":"setting-up-your-computer.html","id":"set-your-github-personal-access-token","chapter":"2 Setting up your computer","heading":"2.3.1 Set your Github Personal Access Token","text":"interact private repositories avoid GitHub rate limits \nunauthenticated users create GitHub Personal Access Token:Open R RStudio execute following commands:R open browser redirect page creating token\n(probably prompt password), set name token “R” \nexpiration time 90 days (tokens without expiration unsecure), leave\neverything else untouched click button “Create token” \npage.GitHub show new created token (ugly string green\nbackground), copy close page.Execute following R command:Now file ~/.Renviron opened preferred editor, now \ncan add (update) line:security reasons good idea change permissions \n~/.Renviron executing following command Terminal:","code":"\ninstall.packages('usethis')\nusethis::create_github_token()\nusethis::edit_r_eviron()GITHUB_PAT=<PUT HERE THE GITHUB TOKEN AND NOT THESE MEANINGLESS WORDS>chmod 0600 ~/.Renviron"},{"path":"setting-up-your-computer.html","id":"slack","chapter":"2 Setting up your computer","heading":"2.4 Slack","text":"Slack communication platform use @Hypermynds \nchat, interact, manage projects share thoughts work life.install Slack laptop can use Homebrew:can access using work email received \nmanager.","code":"> brew install --cask slack"},{"path":"time-report.html","id":"time-report","chapter":"3 Time report","heading":"3 Time report","text":"Like many companies, @Hypermynds need track much time \ndedicated employee various projects assigned \n/. important tracking billable non-billable\nprojects, well manage tax incentives research development\nactivities.Clockify tool use fill weekly\ntimesheet. can access dashboard soon\nmanager invited platform (receive \ninvitation email).mandatory fill time report end working day - \nleast - end working week. weekly timesheet add\nnew row specific project/task worked , providing \ntotal amount hours/minutes dedicated.clicking button three vertical dots next hours/minutes\ncell can also specify start/end times description.find special projects handle time (vacation, sick leave,\nhalf-day, etc) admin activities (staff meetings, etc). unsure\nfill timesheet report think worked project\nyet defined platform, just ask manager.","code":""}]
